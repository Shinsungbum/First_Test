<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hr">

<!-- 신입사원 저장처리 요청 -->
<insert id="insert">
insert into employees(employee_id, last_name, first_name, department_id, job_id,  manager_id, email, phone_number, salary, hire_date)
values (employees_seq.nextval, #{last_name}, #{first_name}
,
  <choose>
 	<when test="department_id==-1">null</when>
 	<otherwise>#{department_id}</otherwise>
 </choose>
, #{job_id}
,
<if test="manager_id==-1">null</if>
<if test="manager_id!=-1">#{manager_id}</if>
 , #{email}, #{phone_number}, #{salary}, #{hire_date})
</insert>

<!-- 매니저리스트 조회요청 -->
<select id="manager_list" resultType="hr.EmployeeVO">
select last_name || ' ' || first_name name, employee_id 
from employees
order by name
</select>

<!-- 사원정보 변경처리 요청 -->
<update id="update">
update employees
set last_name=#{last_name}, first_name=#{first_name}
	,
	<if test="department_id == -1">department_id=null</if>
	<if test="department_id != -1">department_id=#{department_id}</if>
	, job_id=#{job_id} , email=#{email}, phone_number=#{phone_number}
	, salary=#{salary}, hire_date=#{hire_date}
	where employee_id=#{employee_id}
</update>


<!-- 회사의 전체 업무목록조회 -->
<select id="job_list" resultType="hr.JobVO">
select * from jobs
order by job_title
</select>


<!-- 부서목록 조회 -->
<select id="department_list" resultType="hr.DepartmentVO">
select	department_id, department_name
from	departments
order by department_name
</select>



<!-- 특정사원 사원정보 삭제 -->
<delete id="delete">
delete from employees where employee_id = #{employee_id}
</delete>


<!-- 특정사번의 사원정보조회-->
<select id="detail" resultType="hr.EmployeeVO">
select *
from employees e inner join jobs j on j.job_id = e.job_id
				 left outer join departments d on d.department_id = e.department_id
where employee_id = #{employee_id}
</select>




<!-- 특정부서에 속한 사원 목록 -->
<select id="department_employee_list" resultType="hr.EmployeeVO">
select e.*, department_name, job_title, last_name||' '||first_name name
from employees e left outer join departments d on d.department_id = e.department_id
	 inner join jobs j on j.job_id = e.job_id
<if test='department_id == 0'>	 
where e.department_id is null
</if>
<if test='department_id != 0'>	 
where e.department_id = #{department_id}
</if>

order by employee_id
</select>





<!-- 사원이 속한 부서목록 출력 -->
<select id="employee_department_list" resultType="hr.DepartmentVO">
SELECT DISTINCT department_id,  NVL(department_name, '소속없음') department_name
FROM employees e LEFT OUTER JOIN departments d using (department_id)
</select>



<!-- 사원 리스트 출력 -->
<select id="list" resultType="hr.EmployeeVO">
select e.employee_id, e.last_name||' '||e.first_name name, d.department_name, j.job_title, e.hire_date
from employees e LEFT OUTER join departments d
on e.department_id = d.department_id
LEFT OUTER JOIN jobs j
on e.job_id = j.job_id
order by employee_id
</select>


</mapper>